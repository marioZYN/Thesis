#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Fully Convolutional Network
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
The idea of fully convolutional networks is not new in morden CNN architectures.
 A normal CNN architecture has the following three layers: convolution,
 pooling and fully connected layers.
 Convolution and pooling layers are used to extract features from images.
 Then these features are exploited by using fully connected layers.
 Although this architecture achieves good results on image classification
 tasks, it does have some drawbacks.
 One major drawback is that once the network is developed, it can only expect
 fixed size inputs.
 The reason behind this is not due to convolution and pooling but due to
 the fully connected layers.
 In order to initialize the weights for fully connected layers, we need
 to inform the network of the input dimension and this dimension can not
 be changed.
 However, if we think about convolution and pooling operations, they do
 not have such constraints.
 The only requirement for convolution and pooling is to have an input size
 larger than the filter size.
 If we feed convolution and pooling layers with an input having larger dimension
, the output will have a larger dimension for sure, but the operation is
 not influenced at all.
 
\end_layout

\begin_layout Standard
Fully convolutional network is a network without fully connected layers,
 they are replaced by convolution layers.
 Thus we do not have the constraints of fixed size inputs.
 
\end_layout

\end_body
\end_document
